#!/bin/bash
#
#Script name "add-local-user.sh"
#This script creates a new user on the local system
#You will be prompted to enter teh username (login), the person name, and password.
#Enforces that it be executed with superuser (root) privileges.

#If the script is not executed with
#superuser privileges it will not attempt to create a user and return an exit status of 1.

#Prompts the person who executed the script to enter the username (login), the name for
#person who will be using the account, and the initial password for the account.

#Creates a new user on the local system with the input provided by the user.

#Informs the user if the account was not able to be created for some reason. If the account is
#not created, the script is to return an exit status of 1.

#Displays the username, password, and host where the account was created. This way the
#help desk staff can copy the output of the script in order to easily deliver the information to
#the new account holder.

#Create superuser privileges
if [[ "${UID}" -ne 0 ]]
then
 echo 'Please run with sudo or as root.'
 exit 1
fi

#Create a new user on the local syste
read -p 'Enter the username to create: ' USER_NAME

#Get user's real name (contents for the description field).
read -p 'Enter the name of the person or application that will be using this account: ' Comment

echo  "${USER_NAME}:${PASSWORD}" | chpasswd

#Get the Password
read -p 'Enter the password to use for the account: ' PASSWORD

#Create the account
useradd -c "${Comment}" -m ${USER_NAME}

#Check exit status. Was useradd command sucessfull.
#Don't inform user that account was added when infact it was not.

if [[ "${?}" -ne 0 ]]
then
 echo 'The account could not be creatd.'
fi

#Set password for account
echo ${PASSWORD} | passwd --stdin ${USER_NAME}

if [[ "${?}" -ne 0 ]]
then
 echo 'The Password could not be created.'
fi
"add-local-user.sh" 73L, 2129C                                                                    25,23         Top
